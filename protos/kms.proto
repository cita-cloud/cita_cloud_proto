syntax = "proto3";

import "common.proto";
import "blockchain.proto";

package kms;

message GetCryptoInfoResponse {
    common.StatusCode status = 1;
    string name = 2;
    uint32 hash_len = 3;
    uint32 signature_len = 4;
    uint32 address_len = 5;
}

message GenerateKeyPairRequest {
    string Description = 1;
}

message GenerateKeyPairResponse {
    uint64 key_id = 1;
    bytes address = 2;
}

message HashDataRequest {
    bytes data = 1;
}

message VerifyDataHashRequest {
    bytes data = 1;
    bytes hash = 2;
}

message SignMessageRequest {
    uint64 key_id = 1;
    bytes msg = 2;
}

message SignMessageResponse {
    common.StatusCode status = 1;
    bytes signature = 2;
}

message RecoverSignatureRequest {
    bytes msg = 1;
    bytes signature = 2;
}

message RecoverSignatureResponse {
    common.StatusCode status = 1;
    bytes address = 2;
}

service KmsService {
    // Get crypto info
    rpc GetCryptoInfo(common.Empty) returns (GetCryptoInfoResponse);

    // Generate a KeyPair
    rpc GenerateKeyPair(GenerateKeyPairRequest) returns (GenerateKeyPairResponse);

    // Hash data
    rpc HashData(HashDataRequest) returns (common.HashRespond);

    // Verify hash of data
    rpc VerifyDataHash(VerifyDataHashRequest) returns (common.StatusCode);

    // Sign a message
    rpc SignMessage(SignMessageRequest) returns (SignMessageResponse);

    // Recover signature
    rpc RecoverSignature(RecoverSignatureRequest) returns (RecoverSignatureResponse);

    // check transactions
    rpc CheckTransactions(blockchain.RawTransactions) returns (common.StatusCode);
}
